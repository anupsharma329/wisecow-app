apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-tls-proxy
  namespace: wisecow
  labels:
    app: nginx-tls-proxy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx-tls-proxy
  template:
    metadata:
      labels:
        app: nginx-tls-proxy
    spec:
      containers:
      - name: nginx
        image: nginx:alpine
        ports:
        - containerPort: 443
          name: https
        - containerPort: 80
          name: http
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/conf.d
        - name: tls-certs
          mountPath: /etc/nginx/certs
        - name: tls-keys
          mountPath: /etc/nginx/keys
      volumes:
      - name: nginx-config
        configMap:
          name: nginx-tls-config
      - name: tls-certs
        secret:
          secretName: wisecow-tls-private
          items:
          - key: tls.crt
            path: wisecow.crt
      - name: tls-keys
        secret:
          secretName: wisecow-tls-private
          items:
          - key: tls.key
            path: wisecow.key
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-tls-config
  namespace: wisecow
data:
  default.conf: |
    upstream wisecow_backend {
        server wisecow-service:80;
    }
    
    server {
        listen 80;
        server_name 192.168.0.114;
        return 301 https://$server_name$request_uri;
    }
    
    server {
        listen 443 ssl;
        server_name 192.168.0.114;
        
        ssl_certificate /etc/nginx/certs/wisecow.crt;
        ssl_certificate_key /etc/nginx/keys/wisecow.key;
        
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;
        
        location / {
            proxy_pass http://wisecow_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-tls-proxy-service
  namespace: wisecow
  labels:
    app: nginx-tls-proxy
spec:
  selector:
    app: nginx-tls-proxy
  ports:
  - port: 443
    targetPort: 443
    protocol: TCP
    name: https
  - port: 80
    targetPort: 80
    protocol: TCP
    name: http
  type: LoadBalancer
